pragma solidity ^0.5.0;


/// @title Migrations
/// @author truffle
/// @notice truffle autogenerated contract
contract Migrations {
    /// @notice address of an owner
    address public owner;
    /// @notice stores information about last Completed migration
    uint public lastCompletedMigration;

    modifier restricted() {
        if (msg.sender == owner) _;
    }

    /// @notice initalizes contract with contract owner
    /// @dev msg.sender is set as an owner
    constructor() public {
        owner = msg.sender;
    }

    /// @notice sets last completed migration
    /// @dev only owner is allowed to invoke this method
    /// @param completed new completed migration
    function setCompleted(uint completed) external restricted {
        lastCompletedMigration = completed;
    }

    /// @notice upgrades the migration contract
    /// @dev only owner is allowed to invoke this method
    /// @param newAddress new migration address
    function upgrade(address newAddress) external restricted {
        Migrations upgraded = Migrations(newAddress);
        upgraded.setCompleted(lastCompletedMigration);
    }
}
